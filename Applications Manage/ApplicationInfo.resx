<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACQ
        DQAAAk1TRnQBSQFMAgEBAwEAARABAAEQAQABFgEAARYBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABWAMAARYDAAEBAQABCAUAAZABBxgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/BAAB9AHxDLsB8AH0
        BAABEgPqARIBQwHtC5IBBxAAAf8B2gOzAfIaAAH/AfABswyyAYsBvAH/AwABbQH/AQcB9wHzAesBmQF6
        A5kBeQZ6AUoB9AMAC/EB/wHXAeYBAAHhAuYB/xkAAfQBCQGyAtoBswmBAbIBtAH0AwABbQH/AewBQwHy
        AesBegFzA+sBUAWaAXoBeQHsAwAL1wHxAtcB0AHhA9cZAAH0AQkB1AHaAYEJAgFxAWwBtQH0AwABbQH/
        Ae0BFQHyAesBegFzAesBbgeaAXoBeQHsAwAL5gEJAuYB0AHhAuYB0BkAAfQBvAKzAWUDVQK5AXcCVQFI
        AbMBkAHvAfQDAAFtAf8B7wHtAfMB6wF5A3oGmgJ6AesB8wMAAeYB8AnhAf8G5gHcGQAB9AHsARMBiwHO
        AlUBswKGAbMCVQHUAbIBFAHrAfMDAAETA20B6gFDBe0BHAHyBe0B7wQAAdQK3QHzAdUB1AHdAfAC1BoA
        AfMCugEGAdoBVQEOAacBBwGaAbMBCgJVAbMBtAEJAfEDAAb/EQAB5gHzCv8BAAHcAuYB1gH/GgAB8wG6
        AfQBuwGzAYEBrQHqAu8BbQGtAYEBBgG0AfQBCQHxAwAG/xEADeYB1gHzAf8cAAH0AbwC9AHzAQcBrgOL
        AYYBrgEHAfMC9AHwAfMDAAETA+oBEgFDDO0BBwQAAeYB8Qz0AeYB8yEAAfQBrgG1Ar0B9wHrAfIIAAFt
        Af8BkgHsAfIB6wbbBFwB2wF9AYsB8wMAAeYB1QzWAeYB8yAAAfMB7QGuBL0B9wHsAfIHAAFtAf8BkgHs
        AfMB6wHbAZEDbAGRBVwBAAHVAewDAA/mAfMfAAH0AZEB7AGTBb0BkgGQAfQGAAFtAf8BkgEUAfMB6wHb
        AZACkQdcAQAB1QHsAwAB5gH0B/8G5gHzHwAB8wGLAY0BvAGaA70BmgG2ARMB8wYAAW0B/wHvAfcB8wHr
        AtsB1QHbBlwB2wF9AYsB8wMAD9QB8x8AAf8B7wEUAbUBmgO9Ae8BEwHsAf8GAAESA+oBEgFDDO0BBwQA
        BNQB3QHzAdYI1AHzHwAB9AGuAaYBugGaA70BuwGsARQB9AYABv8RAALUAdsB9AG0AdQB2wH/B9QB8x8A
        AfQBrQGLAmYEEwGLARQB8wYABv8RAALUAf8BGQPUAf8B9AbUAfMfAAH0AeYBrQFmAWsFiwESAfQGAAET
        A20B6gFDDO0B7wQAAdQBtAHcAQkB/wHzAf8BtAH/BtQB8xwAAf8B8wH/AQAB8AG0ARMEsgKLAe8BAAH/
        AfMB9AMAAW0C/wHvAfMB6wGIAY4DaQGIBBYCFwFEAfMDAAHUAZgB3AG0AQkB1AH/AdQB9ALUBBkB/xwA
        AfMBCQH0AQAB9AHyAa4EsgHPAbUB9AEAAfQBGQHyAwABbQL/AeoB8wHrAYgBRQMSAW4EsQEWAhcB7AMA
        AtQB4gHUAf8BGQHzAdQB/wLUAf8C1AEZHQAB8wG6AfQCAAH0BfMC9AIAAfQBCQHxAwABbQH/AfMB6gHz
        AesBiAFuAUQBEgaxAxcB7AMAArMBGQEJA7MB9AOzAf8BswEZHgAB8wG6AbsBBwHzAf8HAAH0AQcBuwG6
        AfIDAAFtAf8BBwHvAfMB6wGIAeMCjgLjAbED4wFvARcBRAH0AwAD2QHbA/8E2QH/ARkfAAH0AfMCBwH0
        Af8HAAH/AgcB8gH0AwABEgPqARIBQwHtBJIB7wHyBZIBBwQAC9QB/x4AAUIBTQE+BwABPgMAASgDAAFY
        AwABFgMAAQEBAAEBBQABCAEBFgAD/wEAAeABAAEeAgABPwH/AsADAAHAAQABDgIAARwCAAFAAwABwAEA
        AQ4CAAEcAgABQAMAAcABAAEOAgABHAIAAUADAAHAAQABDgIAARwCAAFAAwABwAEAAQ4CAAE8AgABwAMA
        AcABAAEOAQcB/wH8AQABIAHAAwABwAEAAQ4BBwH/AfwBAAEDAcADAAHAAQABDgIAATwBAAEDAcADAAH+
        AQEB/gIAARwBAAEDAcADAAH8AQAB/gIAARwBAAEDAcADAAH4AQABfgIAARwBAAEDAcADAAH4AQABfgIA
        ARwBAAEDAcADAAH4AQABfgIAATwBAAEDAcADAAH4AQABfgEHAf8B/AEAAQMBwAMAAfgBAAF+AQcB/wH8
        AQABAwHAAwAB+AEAAX4CAAE8AQABAwHAAwABxAEAAY4CAAEcAQABAwHAAwABxAEAAY4CAAEcAQABBwHA
        AwABxgEBAY4CAAEcAQABDwHAAwABwAH+AQ4CAAEcAQABHwHAAwABwAH+AQ4CAAE8AQABPwHAAwAL
</value>
  </data>
</root>